<languageVersion : 1.0;>

kernel crok_2color
<   namespace : "no.vendor";
    vendor : "no-vendor";
    version : 1;
>
{
    input image4 source;
    output pixel4 dst;

    parameter float Amount < displayName: "Amount"; minValue: 0.0; maxValue: 2.0; defaultValue: 1.0; >;
    parameter float Exposure < displayName: "Exposure"; minValue: 0.0;  maxValue: 2.0; defaultValue: 1.0; >;

    parameter float dark_low < displayName: "Dark low"; minValue:0.0; maxValue: 1.0; defaultValue: 0.0; >;
    parameter float dark_high < displayName: "Dark high"; minValue:0.0; maxValue: 1.0; defaultValue: 1.0; >;
    parameter pixel3 dark_tint < displayName: "Dark tint"; parameterType: "colorRGB"; minValue:float3(0); maxValue:float3(1); defaultValue:float3(1,0,1); >;

    parameter float light_low < displayName: "Light low"; minValue:0.0; maxValue: 1.0; defaultValue: 0.0; >;
    parameter float light_high < displayName: "Light high"; minValue:0.0; maxValue: 1.0; defaultValue: 1.0; >;
    parameter pixel3 light_tint < displayName: "Light tint"; parameterType: "colorRGB"; minValue:float3(0); maxValue:float3(1); defaultValue:float3(1,0,0); >;

    parameter float brightness < displayName: "Brightness"; minValue:0.0; maxValue: 10.0; defaultValue: 1.0; >;
    parameter float contrast < displayName: "Contrast"; minValue:0.0; maxValue: 10.0; defaultValue: 1.0; >;
    parameter float saturation <displayName: "Saturation"; minValue:0.0; maxValue: 10.0; defaultValue: 1.0; >;


    void
    evaluatePixel()
    {
        const float3 lumc = float3(0.2125, 0.7154, 0.0721);

        float2 uv = outCoord();

        float3 original = sampleNearest(source, uv).rgb;
        float3 col = original;

        float bri = (col.x + col.y + col.z) / 3.0;
        float v = smoothStep(dark_low, dark_high, bri);
        col = mix(dark_tint * bri, col, v);

        v = smoothStep(light_low, light_high, bri);
        col = mix(col, min(light_tint * col, 1.0), v);
        col = mix(original, col, Amount);

        float3 avg_lum = float3(0.5, 0.5, 0.5);
        float3 intensity = float3(dot(col.rgb, lumc));
        float3 sat_color = mix(intensity, col.rgb, saturation);
        float3 con_color = mix(avg_lum, sat_color, contrast);
        float3 fin_col = con_color - 1.0 + brightness;

        dst = float4(fin_col.r, fin_col.g, fin_col.b, 1.0) * Exposure;
    }
}
